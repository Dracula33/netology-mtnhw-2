---
- name: Add hosts to /etc/hosts
  tags: always
  hosts:
    - clickhouse
    - vector
    - lighthouse
  tasks:

    - name: Add hosts
      become: true
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          {{ hostvars['clickhouse-01']['ansible_host'] }} clickhouse
          {{ hostvars['vector-01']['ansible_host'] }} vector
          {{ hostvars['lighthouse-01']['ansible_host'] }} lighthouse
        marker: "# {mark} ANSIBLE ADD HOSTS"

- name: Install Clickhouse
  hosts: clickhouse
  tags: clickhouse
  vars:
    clickhouse_listen_host:
      - "::"
    clickhouse_networks_default:
      - "::/0"
  roles:
    - clickhouse

  post_tasks:
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'create table logs.test_table(message String, source_type String, timestamp String) engine Log();'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=57
      changed_when: create_db.rc == 0

- name: Install vector
  hosts: vector
  tags: vector
  vars:
    vector_install_dir: /etc
    data_dir: /home/test
    config:
      sources:
        test_logs:
          type: demo_logs
          format: json
      transforms:
        test_transform:
          type: dedupe
          inputs:
            - test_logs
      sinks:
        debug_sink:
          type: console
          inputs:
            - test_transform
          target: stdout
          encoding:
            codec: json
        test_sink:
          type: clickhouse
          inputs:
            - test_transform
          database: logs
          endpoint: http://clickhouse:8123
          table: test_table
          skip_unknown_fields: true
  roles:
    - vector

- name: Install lighthouse
  hosts: lighthouse
  tags: lighthouse
  vars:
    lighthouse_install_directory: /etc
  handlers:

    - name: Start nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted
        daemon_reload: true

  pre_tasks:

    - name: Install nginx
      become: true
      ansible.builtin.yum:
        name: "{{ item }}"
      with_items:
        - epel-release
        - nginx
      notify: Start nginx

    - name: Create nginx config
      become: true
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: "/etc/nginx/conf.d/lighthouse.conf"
        mode: 0644
      notify: Start nginx

  roles:
    - lighthouse
...
